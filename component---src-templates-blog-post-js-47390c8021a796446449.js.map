{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","props","useState","minutes","state","setState","useEffect","dummyHtmlElement","document","createElement","innerHTML","data","markdownRemark","html","textContent","split","length","post","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","date","toFixed","dangerouslySetInnerHTML","__html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,sIA4EeA,UApEf,SAA0BC,GAAQ,IAAD,EACLC,mBAAS,CAAEC,QAAS,IAAvCC,EADwB,KACjBC,EADiB,KAG/BC,qBAAU,WAER,IAAMC,EAAmBC,SAASC,cAAc,QAChDF,EAAiBG,UAAYT,EAAMU,KAAKC,eAAeC,KACvDR,EAAS,CACPF,QAASI,EAAiBO,YAAYC,MAAM,KAAKC,OAAS,QAE3D,CAACf,EAAMU,KAAKC,eAAeC,OAE9B,IAAMI,EAAOhB,EAAMU,KAAKC,eAClBM,EAAYjB,EAAMU,KAAKQ,KAAKC,aAAaC,MAbhB,EAcJpB,EAAMqB,YAAzBC,EAduB,EAcvBA,SAAUC,EAda,EAcbA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUxB,EAAMwB,SAAUJ,MAAOH,GACvC,kBAAC,IAAD,CACEG,MAAOJ,EAAKS,YAAYL,MACxBM,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,4BAAKX,EAAKS,YAAYL,OACtB,uBACEQ,MAAK,iBACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBhB,EAAKS,YAAYS,KARpB,MAQ6B/B,EAAMD,QAAQiC,QAAQ,GARnD,aAUA,yBAAKC,wBAAyB,CAAEC,OAAQrB,EAAKJ,QAC7C,wBACEgB,MAAO,CACLG,aAAcC,YAAO,MAGzB,kBAAC,IAAD,MACA,wBACEJ,MAAO,CACLE,QAAQ,OACRQ,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGnB,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKE,YAAYL,MADpB,UAYL,IAAM0B,EAAS","file":"component---src-templates-blog-post-js-47390c8021a796446449.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nfunction BlogPostTemplate(props) {\n  const [state, setState] = useState({ minutes: 0 })\n\n  useEffect(() => {\n    // To calculate read time (Approximation)\n    const dummyHtmlElement = document.createElement(\"span\")\n    dummyHtmlElement.innerHTML = props.data.markdownRemark.html\n    setState({\n      minutes: dummyHtmlElement.textContent.split(\" \").length / 200,\n    })\n  }, [props.data.markdownRemark.html])\n\n  const post = props.data.markdownRemark\n  const siteTitle = props.data.site.siteMetadata.title\n  const { previous, next } = props.pageContext\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <h1>{post.frontmatter.title}</h1>\n      <p\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-1),\n        }}\n      >\n        {post.frontmatter.date} • {state.minutes.toFixed(0)} min read\n      </p>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      <Bio />\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}